; 必须包含的 supervisord 部分
[supervisord]
logfile = %(ENV_LOG_DIR)s/supervisord.log   ; Supervisor自己的日志文件
logfile_maxbytes = 10MB           ; 日志文件最大大小
logfile_backups = 5               ; 保留的日志备份数量
pidfile = %(ENV_LOG_DIR)s/supervisord.pid    ; PID文件路径
nodaemon = false                 ; 是否在前台运行（生产环境应为false）

[unix_http_server]
file = /tmp/transhub_supervisor.sock  ; 这个socket是supervisord的通信端点

[supervisorctl]
; 关键配置：指定如何连接到supervisord
serverurl = unix:///tmp/transhub_supervisor.sock  ; 使用与上面相同的socket

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

; 下面是各个程序的配置
[program:flask_app]
command = gunicorn run:app -w %(ENV_GUNICORN_WORKERS)s --threads %(ENV_GUNICORN_THREADS)s -b %(ENV_GUNICORN_ADDRESS)s
;directory=/path/to/project
autostart = true
autorestart = true
;user=your_username
stderr_logfile = %(ENV_LOG_DIR)s/flask_app.err.log
stdout_logfile = %(ENV_LOG_DIR)s/flask_app.out.log

[program:dramatiq_worker]
command = dramatiq app_backend.jobs.cctraining_job --processes %(ENV_DRAMATIQ_PROCESSES)s --threads %(ENV_DRAMATIQ_THREADS)s
;directory=/path/to/project
autostart = true
autorestart = true
;user=your_username
stderr_logfile = %(ENV_LOG_DIR)s/dramatiq.err.log
stdout_logfile = %(ENV_LOG_DIR)s/dramatiq.out.log
;environment = MY_ENV_VAR="value"  ; 可选环境变量